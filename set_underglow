#!/home/bcs/set_underglow_p3/bin/python3
import sys
import time
import board
import neopixel

num_pixels = 3

def wheel(pos):
    # Input a value 0 to 255 to get a color value.
    # The colours are a transition r - g - b - back to r.
    if pos < 0 or pos > 255:
        r = g = b = 0
    elif pos < 85:
        r = int(pos * 3)
        g = int(255 - pos * 3)
        b = 0
    elif pos < 170:
        pos -= 85
        r = int(255 - pos * 3)
        g = 0
        b = int(pos * 3)
    else:
        pos -= 170
        r = 0
        g = int(pos * 3)
        b = int(255 - pos * 3)
    return (r, g, b) 

def rainbow_cycle(wait):
    for j in range(255):
        for i in range(num_pixels):
            pixel_index = (i * 256 // num_pixels) + j
            pixels[i] = wheel(pixel_index & 255)
        pixels.show()
        time.sleep(wait)

pixels = neopixel.NeoPixel(board.D18,3)

count = 0; red = 0; green = 0; blue = 0

mode = sys.argv[1]
if (len(sys.argv) > 4):
 red = int(sys.argv[2])
 green = int(sys.argv[3])
 blue = int(sys.argv[4])
if (len(sys.argv) > 5):
 count = int(sys.argv[5])

if (count == 0): count = 10

#print("mode=",mode," red=",red," green=",green," blue=",blue," count=",count)

if (mode == "set"):
 pixels.fill((int(red),int(green),int(blue)))
elif (mode == "blink"):
 for x in range(0,count):
  pixels.fill((int(red),int(green),int(blue)))
  time.sleep(0.5)
  pixels.fill((0,0,0))
  time.sleep(0.5)
elif (mode == "off"):
  pixels.fill((0,0,0))
elif (mode == "pulse"):
 for y in range(0,count): 
  for x in range(0,100):
   pixels.fill((int(red*x/100),int(green*x/100),int(blue*x/100)))
   time.sleep(0.01)
  time.sleep(1)
 for x in range(99,0,-1):
  pixels.fill((int(red*x/100),int(green*x/100),int(blue*x/100)))
  time.sleep(0.01)
elif (mode == "rainbow"):
  rainbow_cycle(0.1)
else:
 print("Unhandled mode!")

exit(0);

# note for this module to work you need to install a few python modules:
#
#    sudo pip3 install rpi_ws281x adafruit-circuitpython-neopixel
#    sudo python3 -m pip install --force-reinstall adafruit-blinka
#
